# CI de Nível 1 - Disparo manual
# TCC
name: "Disparo manual - Rodrigo Henrique"

on:
  workflow_dispatch:

# Permissões necessárias para que o dorny/test-reporter publique relatórios de teste
# - checks:write permite criar relatórios na aba "Checks" do GitHub
# - pull-requests:write permite comentar em pull requests (se necessário)
# - contents:read permite ler o conteúdo do repositório
permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      # Executa os testes Mocha padrão (saída no log do GitHub Actions)
      - name: Run Mocha tests
        run: yarn test

  reports:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      # Executa os testes Mocha e gera relatório HTML visual com Mochawesome
      - name: Run Mocha tests (Mochawesome)
        run: yarn test:mochawesome

      # Faz upload do relatório HTML Mochawesome como artefato para download
      - name: Upload Mochawesome Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mochawesome-report
          path: mochawesome-report/

  ctrf-report:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn
      # Executa os testes Mocha e gera relatório no formato CTRF (Common Test Report Format)
      - name: Run Mocha tests (CTRF)
        run: |
          yarn test:ctrf
          ls -lh ctrf-report.json || (echo 'Arquivo ctrf-report.json não foi gerado!' && exit 1)
      # Faz upload do relatório CTRF como artefato para download
      - name: Upload CTRF Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ctrf-report
          path: ctrf-report.json
      # Integração com o CTRF AI Test Reporter (substitua a URL/token conforme necessário)
      # Veja https://github.com/ctrf-foundation/ctrf-ai-test-reporter para detalhes
      - name: Enviar relatório para CTRF AI Test Reporter
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CTRF_AI_TOKEN }}" \
            --data-binary @ctrf-report.json \
            https://api.ctrf.ai/report
        env:
          # Defina o segredo CTRF_AI_TOKEN nas configurações do repositório
          CTRF_AI_TOKEN: ${{ secrets.CTRF_AI_TOKEN }}
        # Comentário: Integração opcional, remova ou ajuste conforme sua conta/serviço CTRF AI

  deploy:
    runs-on: ubuntu-latest
    needs: [tests, reports]
    steps:
      - name: Simulando deploy
        run: echo "Deploy do TCC efetuado com sucesso..."
